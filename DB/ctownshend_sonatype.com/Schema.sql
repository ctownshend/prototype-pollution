-- This script was generated by a beta version of the Schema Diff utility in pgAdmin 4. 
-- This version does not include dependency resolution, and may require manual changes 
-- to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
BEGIN;
CREATE OR REPLACE FUNCTION public.uuid_generate_v1(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    VOLATILE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_generate_v1'
;

ALTER FUNCTION public.uuid_generate_v1()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_generate_v1mc(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    VOLATILE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_generate_v1mc'
;

ALTER FUNCTION public.uuid_generate_v1mc()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_generate_v3(
	namespace uuid,
	name text)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_generate_v3'
;

ALTER FUNCTION public.uuid_generate_v3(uuid, text)
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_generate_v4(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    VOLATILE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_generate_v4'
;

ALTER FUNCTION public.uuid_generate_v4()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_generate_v5(
	namespace uuid,
	name text)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_generate_v5'
;

ALTER FUNCTION public.uuid_generate_v5(uuid, text)
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_nil(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_nil'
;

ALTER FUNCTION public.uuid_nil()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_ns_dns(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_ns_dns'
;

ALTER FUNCTION public.uuid_ns_dns()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_ns_oid(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_ns_oid'
;

ALTER FUNCTION public.uuid_ns_oid()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_ns_url(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_ns_url'
;

ALTER FUNCTION public.uuid_ns_url()
    OWNER TO "iq-server";


CREATE OR REPLACE FUNCTION public.uuid_ns_x500(
	)
    RETURNS uuid
    LANGUAGE 'c'

    COST 1
    IMMUTABLE STRICT PARALLEL SAFE
    
AS '$libdir/uuid-ossp', 'uuid_ns_x500'
;

ALTER FUNCTION public.uuid_ns_x500()
    OWNER TO "iq-server";


CREATE TABLE public."package"
(
    packageid uuid NOT NULL DEFAULT uuid_generate_v4(),
    format character varying(255) COLLATE pg_catalog."default" NOT NULL,
    packagename character varying(255) COLLATE pg_catalog."default" NOT NULL,
    dateadded timestamp with time zone,
    description character varying(1024) COLLATE pg_catalog."default",
    CONSTRAINT package_pkey PRIMARY KEY (packageid)
)

TABLESPACE pg_default;

ALTER TABLE public."package"
    OWNER to "iq-server";
CREATE UNIQUE INDEX package_unique
    ON public."package" USING btree
    (format COLLATE pg_catalog."default" ASC NULLS LAST, packagename COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE public.packageversion
(
    packageversionid uuid NOT NULL DEFAULT uuid_generate_v4(),
    packageid uuid NOT NULL,
    version character varying(255) COLLATE pg_catalog."default" NOT NULL,
    datepublished timestamp with time zone,
    dateadded timestamp with time zone,
    CONSTRAINT packageversion_pkey PRIMARY KEY (packageversionid)
)

TABLESPACE pg_default;

ALTER TABLE public.packageversion
    OWNER to "iq-server";
CREATE UNIQUE INDEX packageversion_unique
    ON public.packageversion USING btree
    (packageid ASC NULLS LAST, version COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE public.packageversionfunction
(
    packageversionfunctionid uuid NOT NULL DEFAULT uuid_generate_v4(),
    packageversionid uuid NOT NULL,
    functionname character varying(255) COLLATE pg_catalog."default" NOT NULL,
    dateadded timestamp with time zone,
    CONSTRAINT packageversionfunction_pkey PRIMARY KEY (packageversionfunctionid)
)

TABLESPACE pg_default;

ALTER TABLE public.packageversionfunction
    OWNER to "iq-server";
CREATE UNIQUE INDEX packageversionfunction_unique
    ON public.packageversionfunction USING btree
    (packageversionid ASC NULLS LAST, functionname COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE public.packageversionfunctionvulns
(
    packageversionfunctionvulnsid uuid NOT NULL DEFAULT uuid_generate_v4(),
    packageversionfunctionid uuid,
    vulnerability character varying(1024) COLLATE pg_catalog."default" NOT NULL,
    vulnerabilitypoc text COLLATE pg_catalog."default",
    cwe character varying(1024) COLLATE pg_catalog."default",
    cves text COLLATE pg_catalog."default",
    dateadded timestamp with time zone,
    CONSTRAINT packageversionfunctionvulns_pkey PRIMARY KEY (packageversionfunctionvulnsid)
)

TABLESPACE pg_default;

ALTER TABLE public.packageversionfunctionvulns
    OWNER to "iq-server";

END;